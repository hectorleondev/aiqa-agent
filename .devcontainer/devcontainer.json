// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/python
{
    "name": "AI QA Agent - Python FastAPI with PostgreSQL & Redis",
    // Use Docker Compose for multi-service setup
    "dockerComposeFile": "docker-compose.yml",
    "service": "app",
    "workspaceFolder": "/workspace",
    // Forward ports for all services
    "forwardPorts": [
        8000,
        5432,
        6379
    ],
    "portsAttributes": {
        "8000": {
            "label": "FastAPI",
            "onAutoForward": "notify"
        },
        "5432": {
            "label": "PostgreSQL",
            "onAutoForward": "silent"
        },
        "6379": {
            "label": "Redis",
            "onAutoForward": "silent"
        }
    },
    "postStartCommand": "bash .devcontainer/start-server.sh",
    // Configure tool-specific properties
    "customizations": {
        "vscode": {
            "extensions": [
                "ms-python.python",
                "ms-python.vscode-pylance",
                "ms-python.debugpy",
                "charliermarsh.ruff",
                "ms-python.flake8",
                "ms-python.black-formatter",
                "ms-python.isort",
                "ms-vscode.vscode-json",
                "ms-vscode.test-adapter-converter",
                "littlefoxteam.vscode-python-test-adapter"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/usr/local/bin/python",
                "python.linting.enabled": true,
                "python.linting.pylintEnabled": true,
                "python.linting.flake8Enabled": true,
                "python.formatting.provider": "black",
                "python.formatting.blackArgs": [
                    "--line-length",
                    "88"
                ],
                "python.sortImports.args": [
                    "--profile",
                    "black"
                ],
                "python.testing.pytestEnabled": true,
                "python.testing.pytestArgs": [
                    "tests"
                ],
                "python.testing.unittestEnabled": false,
                "editor.formatOnSave": true,
                "editor.codeActionsOnSave": {
                    "source.organizeImports": "explicit"
                },
                "files.exclude": {
                    "**/__pycache__": true,
                    "**/*.pyc": true
                }
            }
        }
    },
    // Use non-root user for security
    "remoteUser": "appuser",
    "features": {
        "ghcr.io/devcontainers/features/git:1": {}
    }
}